name: Deploy

on:
  release:
    types:
      - published
  workflow_dispatch:

env:
  FORCE_COLOR: 2
  NODE: 20

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.repository == 'twbs/icons' && startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "${{ env.NODE }}"
          cache: npm

      - name: Install npm dependencies
        run: npm ci

      - name: Prepare release
        run: npm run release

      - name: Upload docs
        uses: actions/upload-pages-artifact@v3
        if: github.repository == 'twbs/icons' && startsWith(github.ref, 'refs/tags/v')

  deploy-docs:
    runs-on: ubuntu-latest
    needs: build
    if: github.repository == 'twbs/icons' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    if: github.repository == 'twbs/icons' && startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/setup-node@v4
        with:
          node-version: "${{ env.NODE }}"
          registry-url: "https://registry.npmjs.org"

      - name: Publish on npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
